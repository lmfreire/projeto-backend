// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id Int @id @default(autoincrement())
  nome String
  cnpj String
  ativo Boolean @default(true)

  Usuario Usuario[]

  Produto Produto[]

  Fabricante Fabricante[]

  ProdutoItem ProdutoItem[]

  Venda Venda[]

  Cliente Cliente[]
}

model Usuario {
  id Int @id @default(autoincrement())
  nome String
  senha String
  email String @unique
  empresa Empresa @relation(fields: [empresaId], references: [id])
  empresaId Int

  Venda Venda[]
}

model Cliente {
  id Int @id @default(autoincrement())
  nome String
  cpf String?
  email String @unique
  endereco String?
  telefone String?
  
  empresa Empresa @relation(fields: [empresaId], references: [id])
  empresaId Int


  Venda Venda[]
}

model Fabricante {
  id Int @id @default(autoincrement())
  nome String
  empresa Empresa @relation(fields: [empresaId], references: [id])
  empresaId Int

  Produto Produto[]
}

model Produto {
  id Int @id @default(autoincrement())
  nome String  
  estoque Int
  precoVenda Decimal

  fabricante Fabricante @relation(fields: [fabricanteId], references: [id])
  fabricanteId Int

  empresa Empresa @relation(fields: [empresaId], references: [id])
  empresaId Int

  ProdutoItem ProdutoItem[]
}

model ProdutoItem {
  id Int @id @default(autoincrement())
  codigo String
  descricao String?
  complemento String?
  markup String?
  codigogtin String?
  
  produto Produto @relation(fields: [produtoId], references: [id])
  produtoId Int

  empresa Empresa @relation(fields: [empresaId], references: [id])
  empresaId Int

  vendaItem VendaItem?
}

model Venda {
  id Int @id @default(autoincrement())
  valor_total Decimal
  descricao String?
  data_venda DateTime @default(now())
  finalizada Boolean @default(false)

  empresa Empresa @relation(fields: [empresaId], references: [id])
  empresaId Int

  usuario Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int

  cliente Cliente @relation(fields: [clienteId], references: [id])
  clienteId Int

  VendaItem VendaItem[]
}

model VendaItem {
  id Int @id @default(autoincrement())
  quantidade Int
  valor_unitario Decimal
  valor_total Decimal
  desconto Decimal

  produtoItem ProdutoItem @relation(fields: [produtoItemId], references: [id])
  produtoItemId Int @unique

  venda Venda @relation(fields: [vendaId], references: [id])
  vendaId Int
}